#!/bin/sh

# --------------SPM BATCH VBM TEMPLATE ----------------
# 
# This script takes FIGS anatomical data under Processed
# and runs VBM analysis onit!
#
# ----------------------------------------------------

# There are 2 USER sections 
#  1. USER DIRECTIVE: If you want mail notifications when
#     your job is completed or fails you need to set the 
#     correct email address.
#		   
#  2. USER SCRIPT: Add the user script in this section.
#     Within this section you can access your experiment 
#     folder using $EXPERIMENT. All paths are relative to this variable
#     eg: $EXPERIMENT/Data $EXPERIMENT/Analysis	
#     By default all terminal output is routed to the " Analysis "
#     folder under the Experiment directory i.e. $EXPERIMENT/Analysis
#     To change this path, set the OUTDIR variable in this section
#     to another location under your experiment folder
#     eg: OUTDIR=$EXPERIMENT/Analysis/GridOut 	
#     By default on successful completion the job will return 0
#     If you need to set another return code, set the RETURNCODE
#     variable in this section. To avoid conflict with system return 
#     codes, set a RETURNCODE higher than 100.
#     eg: RETURNCODE=110
#     Arguments to the USER SCRIPT are accessible in the usual fashion
#     eg:  $1 $2 $3
# The remaining sections are setup related and don't require
# modifications for most scripts. They are critical for access
# to your data  	 

# --- BEGIN GLOBAL DIRECTIVE -- 
#$ -S /bin/sh
#$ -o $HOME/$JOB_NAME.$JOB_ID.out
#$ -e $HOME/$JOB_NAME.$JOB_ID.out
#$ -m ea
# -- END GLOBAL DIRECTIVE -- 

# -- BEGIN PRE-USER --
#Name of experiment whose data you want to access 
EXPERIMENT=${EXPERIMENT:?"Experiment not provided"}

source /etc/biac_sge.sh

EXPERIMENT=`biacmount $EXPERIMENT`
EXPERIMENT=${EXPERIMENT:?"Returned NULL Experiment"}

if [ $EXPERIMENT = "ERROR" ]
then
	exit 32
else 
#Timestamp
echo "----JOB [$JOB_NAME.$JOB_ID] START [`date`] on HOST [$HOSTNAME]----" 
# -- END PRE-USER --
# **********************************************************

# -- BEGIN USER DIRECTIVE --
# Send notifications to the following address
#$ -M @vsoch

# -- END USER DIRECTIVE --

# -- BEGIN USER SCRIPT --
# User script goes here


# ------------------------------------------------------------------------------
#
#  Variables and Path Preparation
#
# ------------------------------------------------------------------------------

# Initialize input variables (fed in via python script)
SUBJ=050803095628                # This is the full subject folder name under Data
RUN=1                 # This is a run number, if applicable
ANATFOLDER=MPRAGE         # This is the name of the anatomical folder
GMMODULATION=2  # This is set to 1, meaning we want the SPM default
OUTNAME=SPGR            # This should be SPM_Default_Modulation (if 1) and SPGR (if 2)

#Make the subject specific output directories
mkdir -p $EXPERIMENT/Analysis/SPM/Processed/$SUBJ/$ANATFOLDER/$OUTNAME
SPGR_OUTDIR=$EXPERIMENT/Analysis/SPM/Processed/$SUBJ/$ANATFOLDER/$OUTNAME
  
# Initialize other variables to pass on to matlab template script
OUTDIR=$EXPERIMENT/Analysis/SPM/Processed/$SUBJ       # This is the subject output directory top
SCRIPTDIR=$EXPERIMENT/Scripts/SPM/VBM                 # This is the location of our MATLAB script templates
BIACROOT=/usr/local/packages/MATLAB/BIAC              # This is where matlab is installed on the custer

# If the subject has an MPRAGE folder, go to it, and rename the file to mprage.hdr/.img
if [ -e "$EXPERIMENT/Analysis/SPM/Processed/$SUBJ/$ANATFOLDER" ];
then
cd $EXPERIMENT/Analysis/SPM/Processed/$SUBJ/$ANATFOLDER
MPRAGE=s*.img
cp $MPRAGE mprage.img
rm $MPRAGE

MPRAGE=s*.hdr
cp $MPRAGE mprage.hdr
rm $MPRAGE
fi


# ------------------------------------------------------------------------------
#
#  Running VBM
#
# ------------------------------------------------------------------------------

# Change into directory where template exists, save subject specific script
cd $SCRIPTDIR

# Loop through template script replacing keywords
for i in 'vbm8.m'; do
sed -e 's@SUB_BIACROOT_SUB@'$BIACROOT'@g' \
 -e 's@SUB_SCRIPTDIR_SUB@'$SCRIPTDIR'@g' \
 -e 's@SUB_SUBJECT_SUB@'$SUBJ'@g' \
 -e 's@SUB_MOUNT_SUB@'$EXPERIMENT'@g' \
 -e 's@SUB_GMMODULATION_SUB@'$GMMODULATION'@g' \
 -e 's@SUB_ANATFOLDER_SUB@'$ANATFOLDER'@g' <$i> $OUTDIR/vbm8_1_${GMMODULATION}.m
done
 
# Change to output directory and run matlab on input script
cd $OUTDIR

/usr/local/bin/matlab -nodisplay < vbm8_1_${GMMODULATION}.m

echo "Done running vbm_8.m in matlab"

case $GMMODULATION in

1 )
# Copy data into mprage folder
cd $EXPERIMENT/Analysis/SPM/Processed/$SUBJ/$ANATFOLDER/
cp sm0wp2mprage.nii $SPGR_OUTDIR/sm0wp2_mprage.nii
cp wmmprage.nii $SPGR_OUTDIR/wm_mprage.nii
cp mwp2mprage.nii $SPGR_OUTDIR/mwp2_mprage.nii
cp mwp1mprage.nii $SPGR_OUTDIR/mwp1_mprage.nii
cp smwp1mprage.nii $SPGR_OUTDIR/smwp1_mprage.nii
cp mprage_seg8.mat $SPGR_OUTDIR/mprage_seg8.mat
cp pmprage_seg8.txt $SPGR_OUTDIR/p_mprage_seg8.txt

# Delete old files
rm sm0wp2mprage.nii
rm wmmprage.nii
rm mwp2mprage.nii 
rm mwp1mprage.nii
rm smwp1mprage.nii
rm mprage_seg8.mat
rm pmprage_seg8.txt;;

2 )
cd $EXPERIMENT/Analysis/SPM/Processed/$SUBJ/$ANATFOLDER/
cp sm0wp2mprage.nii $SPGR_OUTDIR/sm0wp2_mprage.nii
cp wmmprage.nii $SPGR_OUTDIR/wm_mprage.nii
cp m0wp2mprage.nii $SPGR_OUTDIR/m0wp2_mprage.nii
cp m0wp1mprage.nii $SPGR_OUTDIR/m0wp1_mprage.nii
cp smwp1mprage.nii $SPGR_OUTDIR/smwp1_mprage.nii
cp mprage_seg8.mat $SPGR_OUTDIR/mprage_seg8.mat
cp pmprage_seg8.txt $SPGR_OUTDIR/pmprage_seg8.txt

# Delete old files
rm sm0wp2mprage.nii
rm wmmprage.nii
rm m0wp2mprage.nii 
rm m0wp1mprage.nii
rm smwp1mprage.nii
rm mprage_seg8.mat
rm pmprage_seg8.txt;;

esac
# -- END USER SCRIPT -- #

# **********************************************************
# -- BEGIN POST-USER -- 
echo "----JOB [$JOB_NAME.$JOB_ID] STOP [`date`]----" 
OUTDIR=${OUTDIR:-$EXPERIMENT/Analysis/SPM/Processed/$SUBJ}
mv $HOME/$JOB_NAME.$JOB_ID.out $OUTDIR/$JOB_NAME.$JOB_ID.out	 
RETURNCODE=${RETURNCODE:-0}
exit $RETURNCODE
fi
# -- END POST USER-- 
