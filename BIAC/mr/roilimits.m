function [srs,limits]=roilimits(defSrs,varargin)
%ROILIMITS Get ROI limits for MR series in overlay2 window.
%
%       [srs,limits]=roilimits(defSrs,defLimits,...);
%
%       defSrs is 0 for the base series, 1 for overlay 1, 2 for overlay 2 and
%         indicates which series is the default in the GUI.
%       defLimits is [min max] for default limits in the GUI.
%         If there is more than one defLimits argument, they specify different
%         defaults for each series, starting with the base.
%         Use empty matrix or omit for no limits.
%       srs is 0 for the base series, 1 for overlay 1, 2 for overlay 2 and
%         indicates which series the limits apply to.
%         srs is [] if user canceled or closed window.
%       limits is [min max] of raw pixel values to include in ROI.
%         limits is [] if user canceled or closed window.

% CVS ID and authorship of this code
% CVSId = '$Id: roilimits.m,v 1.5 2005/02/22 03:59:21 michelich Exp $';
% CVSRevision = '$Revision: 1.5 $';
% CVSDate = '$Date: 2005/02/22 03:59:21 $';
% CVSRCSFile = '$RCSfile: roilimits.m,v $';

% Set up GUI
fig=roilimitsgui;
set(fig,'WindowStyle','modal');

% Handle defaults
nSrs=length(get(findobj(fig,'Tag','Series'),'String'));  % Number of series choices (base, overlay1, overlay2, ...)
srsInd=2;                                                % Default to first overlay
defLimits=varargin;
defLimits(length(defLimits)+1:nSrs)={[]};                % Fill in [] for unspecified limits
if nargin>0 & ~isempty(defSrs)
  srsInd=max(1,min(defSrs+1,nSrs));                      % Limit to valid values
end
set(findobj(fig,'Tag','Series'),'Value',srsInd);
if isempty(defLimits{srsInd})
  set(findobj(fig,'Tag','Min'),'String','');
  set(findobj(fig,'Tag','Max'),'String','');
else
  set(findobj(fig,'Tag','Min'),'String',num2str(defLimits{srsInd}(1)));
  set(findobj(fig,'Tag','Max'),'String',num2str(defLimits{srsInd}(2)));
end

% Wait for user
while 1
  waitfor(fig,'UserData');                      % Wait for window to close or UserData to change
  if ishandle(fig)
    ud=get(fig,'UserData');
    set(fig,'UserData',[]);
  else
    ud='Cancel';                                % Closed window = Cancel
  end
  if ~isempty(ud)
    switch ud
      case 'OK'
        srs=get(findobj(fig,'Tag','Series'),'Value')-1;
        currMin=str2num(get(findobj(fig,'Tag','Min'),'String'));
        currMax=str2num(get(findobj(fig,'Tag','Max'),'String'));
        limits=[currMin currMax];
        break;
      case 'NoLimits'
        srs=0;      % Arbitrary
        limits=[];
        break;
      case 'Cancel'
        srs=[];
        limits=[];
        break;
      case 'Series'
        srsInd=get(findobj(fig,'Tag','Series'),'Value');
        if isempty(defLimits{srsInd})
          set(findobj(fig,'Tag','Min'),'String','');
          set(findobj(fig,'Tag','Max'),'String','');
        else
          set(findobj(fig,'Tag','Min'),'String',num2str(defLimits{srsInd}(1)));
          set(findobj(fig,'Tag','Max'),'String',num2str(defLimits{srsInd}(2)));
        end
      end % switch
  end % if ~isempty
end % while 1

if ishandle(fig)
   close(fig);
end

% -------------------------------------------------------------------------
function fig = roilimitsgui
% Initialize GUI

h0 = figure('Units','points', ...
	'Color',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'FileName','S:\MATLAB\MR\roilimitsgui.m', ...
	'Interruptible','off', ...
	'MenuBar','none', ...
	'Name','ROI Limits', ...
	'NumberTitle','off', ...
	'PaperPosition',[18 180 576 432], ...
	'PaperUnits','points', ...
	'Position',[569.25 297.75 142.5 120], ...
	'Resize','off', ...
	'Tag','ROILimits', ...
	'ToolBar','none');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[37.5 67.5 22.5 15], ...
	'String','Max', ...
	'Style','text', ...
	'Tag','StaticText3');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[37.5 90 22.5 15], ...
	'String','Min', ...
	'Style','text', ...
	'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[7.5 45 52.5 15], ...
	'String','Apply limits to:', ...
	'Style','text', ...
	'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[67.5 90 37.5 15], ...
	'Style','edit', ...
	'Tag','Min', ...
	'TooltipString','Enter lower limit');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[67.5 67.5 37.5 15], ...
	'Style','edit', ...
	'Tag','Max', ...
	'TooltipString','Enter upper limit');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Callback','set(gcbf,''UserData'',''Series'');', ...
	'ListboxTop',0, ...
	'Position',[67.5 45 52.5 15], ...
	'String',{'Base','Overlay1','Overlay2'}, ...
	'Style','popupmenu', ...
	'Tag','Series', ...
	'TooltipString','Apply limits to this layer', ...
	'Value',1);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'Callback','set(gcbf,''UserData'',''OK'');', ...
	'ListboxTop',0, ...
	'Position',[7.5 15 37.5 15], ...
	'String','OK', ...
	'Tag','OK Button', ...
	'TooltipString','Use specified limits for ROI definition');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'Callback','set(gcbf,''UserData'',''Cancel'');', ...
	'ListboxTop',0, ...
	'Position',[52.5 15 37.5 15], ...
	'String','Cancel', ...
	'Tag','Cancel Button', ...
	'TooltipString','Cancel ROI definition');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'Callback','set(gcbf,''UserData'',''NoLimits'');', ...
	'ListboxTop',0, ...
	'Position',[97.5 15 37.5 15], ...
	'String','None', ...
	'Tag','NoLimits Button', ...
	'TooltipString','Don''t use any limits for ROI definition');
if nargout > 0, fig = h0; end

% Modification History:
%
% $Log: roilimits.m,v $
% Revision 1.5  2005/02/22 03:59:21  michelich
% Make roilimitsgui a local function of roilimits.
%
% Revision 1.4  2005/02/03 16:58:43  michelich
% Changes based on M-lint:
% Make unused CVS variables comments for increased efficiency.
% Remove unnecessary semicolon after function declarations.
% Remove unnecessary commas after try, catch, and else statements.
%
% Revision 1.3  2003/10/22 15:54:39  gadde
% Make some CVS info accessible through variables
%
% Revision 1.2  2002/09/10 21:24:15  michelich
% Changed name of min and max varaibles since they are already defined as   functions (MATLAB 6.5 warning).
%
% Revision 1.1  2002/08/27 22:24:25  michelich
% Initial CVS Import
%
%
% Pre CVS History Entries:
% Charles Michelich, 2001/01/25. Changed function name to lowercase.
%                                Changed overlay2() and roilimitsgui() to lowercase
% Francis Favorini,  2000/05/04. Added NoLimits option.
% Francis Favorini,  2000/04/18. Added comments.
% Francis Favorini,  2000/03/23. Allow multiple defLimits, so you can specify different
%                                defaults for each series.
%                                Changed GUI so base series is first choice in popup,
%                                but default is still overlay1.
% Francis Favorini,  1998/09/01.
